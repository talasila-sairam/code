package com.appstek.dc.service;

import java.sql.SQLException;
import java.util.ArrayList;
import java.util.LinkedHashMap;
import java.util.List;
import java.util.Map;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.hibernate.HibernateException;

import com.appstek.dc.dbload.FnfLanCountries;
import com.appstek.dc.dbload.FnfLanCountyTables;
import com.appstek.dc.dbload.FnfLanDictionary;
import com.appstek.dc.dbload.RuleQuery;
import com.appstek.dc.dto.DataConversionDto;
import com.appstek.dc.dto.DataConversionRuleDto;

public interface DataConversionService {

	List<FnfLanCountries> loadCountries();

	List<FnfLanDictionary> loadAllFields();

	List<FnfLanCountyTables> loadTableNames(DataConversionDto dataConversionDto);

	Map<String, List<DataConversionDto>> loadTableColumnNames(DataConversionDto dataConversionDto);

	List<LinkedHashMap<String, Object>> getQueryData(String inputQuery) throws HibernateException,SQLException;

	int executeUpdate(String inputQuery);

	List<RuleQuery> loadAllTheRules(DataConversionDto dataConversionDto);

	boolean deleteRule(DataConversionRuleDto dataConversionRuleDto);

	RuleQuery loadRule(DataConversionRuleDto dataConversionRuleDto);

	/*List<List<LinkedHashMap<String, Object>>> getDefaultFlag(String selectedValue);*/

	boolean saveRule(DataConversionRuleDto dataConversionRuleDto);

	boolean isExistsRuleName(String ruleName);

	List<DataConversionRuleDto> getFieldRules(DataConversionRuleDto ruleDto);
	
	boolean editRule(DataConversionRuleDto dataConversionRuleDto);

	//void getQueryDataXl();

	List<List<LinkedHashMap<String, Object>>> getResultOfJoinCondition(String string);

	public String saveDataForLan23(String countyName,String stateName);

	List<DataConversionRuleDto> getPerticularFieldRules(DataConversionRuleDto ruleDto);

/*	List<String> getTablesNames(String countryName);*/
	

	ArrayList FetchCounties(String inputQuery);

	ArrayList Fetchusers(String inputQuery);


	void saveUserTaskmanagement(String user, String county,String state,String editionYear,String assignedTime);

	List<LinkedHashMap<String, Object>> showUserTaskmanagement();

	void showValidateUser(HttpServletRequest request, HttpServletResponse response,
			String username, String password);

	List<LinkedHashMap<String, Object>>  UserReportfetchRecords(HttpServletRequest request, HttpServletResponse response, String userName);

	void UserReportInsertRecords(HttpServletRequest request,
			HttpServletResponse response, String comments, String currentStatus,String selectedUser,String signOffStatus);

	ArrayList<Object> FetchStates(String selectQuery);

	int getRuleCount(DataConversionDto dataConversionDto);
}
